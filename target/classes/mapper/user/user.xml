<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.user">
    
    <resultMap type="UserVO" id="userResultMap">
        <id     property="uId"       column="u_id"/>
        <result property="name"      column="name"/>
        <result property="passwd"    column="passwd"/>
        <result property="intLevel"  column="u_Level"/>
        <result property="login"     column="login"/>
        <result property="recommend" column="recommend"/>
        <result property="email"     column="email"/>
        <result property="regDt"     column="reg_dt"/>
    </resultMap>
    
    <select id="idCheck" parameterType="UserVO" resultType="int">
        SELECT COUNT(*) AS cnt
        FROM hr_member
        where u_id = #{uId}
    </select>
    
    <select id="pwCheck" parameterType="UserVO" resultType="int">
        SELECT COUNT(*) AS cnt
        FROM hr_member
        where u_id = #{uId} AND passwd = #{passwd}
    </select>
    
    <!-- 10: uId(ID로 검색), 20: name(이름으로 검색), 30: email(이메일로 검색), others: 전체 -->
    <sql id="searchCondition">
        <where>
	        <choose>
	            <when test="searchDiv == '10' and searchWord != ''">
	                u_id LIKE #{searchWord} || '%'
	            </when>
	            <when test="searchDiv == '20' and searchWord != ''">
	                name LIKE #{searchWord} || '%'
	            </when>
	            <when test="searchDiv == '30' and searchWord != ''">
	                email LIKE #{searchWord} || '%'
	            </when>
	        </choose>
        </where>
    </sql>
    
    <!-- 목록조회: namespace+id = om.pcwk.ehr.user.doRetrieve -->
    <!--     param: pageSize, pageNum, 검색구분, 검색어 -->
    <select id="doRetrieve" parameterType="SearchVO" resultType="UserVO">
	    
	    SELECT A.*, B.*
	    FROM (
	      SELECT TT1.rnum AS num,
	             TT1.u_id AS "uId",
	             TT1.name,
	             TT1.passwd,
	             TT1.u_level AS intLevel,
	             TT1.recommend,
	             TT1.email,
	             DECODE(TO_CHAR(SYSDATE,'YYYYMMDD'),TO_CHAR(TT1.reg_dt,'YYYYMMDD'),TO_CHAR(TT1.reg_dt,'HH24:MI'),TO_CHAR(TT1.reg_dt,'YYYY-MM-DD')) regDt
	      FROM (
	          SELECT ROWNUM AS RNUM, T1.*
	          FROM (
	              SELECT *
	              FROM hr_member
	              --검색조건
	              <include refid="searchCondition"></include>
	              ORDER BY reg_dt DESC
	          )T1
	      <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNum}-1) + #{pageSize} ]]>
	      )TT1
	      <![CDATA[ WHERE rnum >= (#{pageSize} * (#{pageNum} -1) +1) ]]>
	    )A
	   CROSS JOIN (
	     SELECT COUNT(*)  AS totalCnt
	     FROM hr_member
	     -- 검색조건
	     <include refid="searchCondition"></include>
	   )B
    </select>
    
    <!-- 단건수정: namespace+id = om.pcwk.ehr.user.deleteAll -->
    <update id="doUpdate" parameterType="UserVO">
        UPDATE hr_member      
		SET name = #{name},         
		    passwd = #{passwd},       
		    u_level = #{intLevel},      
		    login = #{login},        
		    recommend = #{recommend},    
		    email = #{email},        
		    reg_dt = SYSDATE
		WHERE u_id = #{uId}        
    </update>
    
    <!-- 전체 삭제: namespace+id = om.pcwk.ehr.user.deleteAll -->
    <delete id="deleteAll">
        DELETE FROM hr_member
    </delete>   
    
    <!-- 다건조회: namespace+id = om.pcwk.ehr.user.getAll -->
    <select id="getAll" parameterType="UserVO" resultMap="userResultMap">
        SELECT                                                 
		    u_id,                                              
		    name,                                              
		    passwd,                                            
		    u_level,                                           
		    login,                                          
		    recommend,                                      
		    email,                                             
		    TO_CHAR(reg_dt, 'yyyy-mm-dd hh24:mi:ss') AS reg_dt 
		FROM hr_member                                      
		WHERE u_id LIKE #{uId} || '%'                               
		ORDER BY u_id                                       
    </select>
    
    <!-- 단건조회: namespace+id = om.pcwk.ehr.user.getCount -->
    <select id="getCount" parameterType="UserVO" resultType="int">
        SELECT COUNT(*) AS cnt FROM hr_member WHERE u_id LIKE #{uId} || '%'
    </select>
    
    <!-- 단건조회: namespace+id = om.pcwk.ehr.user.doSelectOne -->
    <select id="doSelectOne" parameterType="UserVO" resultMap="userResultMap">
        <![CDATA[
	        SELECT                                                
			    u_id,                                             
			    name,                                             
			    passwd,                                           
			    u_level,                                          
			    login,                                              
			    recommend,                                          
			    email,                                            
			    TO_CHAR(reg_dt, 'yyyy-mm-dd hh24:mi:ss') AS reg_dt
			FROM hr_member                                          
			WHERE u_id = #{uId}
		]]>                                          
    </select>
    
    <!-- 단건삭제: namespace+id = om.pcwk.ehr.user.doDelete -->
    <delete id="doDelete" parameterType="UserVO">
        DELETE FROM hr_member WHERE u_id = #{uId}
    </delete>
    
    <!-- 단건등록: namespace+id = om.pcwk.ehr.user.doInsert -->
    <insert id="doInsert" parameterType="UserVO">
	    INSERT INTO hr_member (
	        u_id,              
	        name,              
	        passwd,            
	        u_level,           
	        login,             
	        recommend,         
	        email,             
	        reg_dt             
	    ) VALUES (             
	        #{uId},                 
	        #{name},                 
	        #{passwd},                 
	        #{intLevel},                 
	        #{login},                 
	        #{recommend},                 
	        #{email},                 
	        SYSDATE            
	    )                      
    </insert>
</mapper>